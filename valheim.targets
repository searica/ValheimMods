<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <PreferredToolArchitecture>true</PreferredToolArchitecture>
        <AssemblyName>$(ProjectName)</AssemblyName>
        <RootNamespace>$(ProjectName)</RootNamespace>
        <TargetFramework>netstandard2.0</TargetFramework>
        <TargetFrameworkVersion>v4.8</TargetFrameworkVersion>
        <Platforms>AnyCPU</Platforms>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </PropertyGroup>

    <Import Project="$(SolutionsDir).props" Condition="Exists('$(SolutionsDir).props')"/>

    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim Server|AnyCPU'">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\Debug\</OutputPath>
        <DefineConstants>DEBUG;TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Archive|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim Server|AnyCPU'">
        <PlatformTarget>AnyCPU</PlatformTarget>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\Release\</OutputPath>
        <DefineConstants>TRACE</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    </PropertyGroup>

    <!--  disables cache which can prevent building or running stuff  -->
    <PropertyGroup>
        <DisableFastUpToDateCheck>True</DisableFastUpToDateCheck>
    </PropertyGroup>

    <!-- Automatic publicize game libs -->
    <ItemGroup>
        <PackageReference Include="Krafs.Publicizer" Version="2.2.1">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
        </PackageReference>
    </ItemGroup>
    <PropertyGroup>
        <PublicizerClearCacheOnClean>true</PublicizerClearCacheOnClean>
        <PublicizerLogFilePath>.\Logs\publicizer.txt</PublicizerLogFilePath>
    </PropertyGroup>
    <!-- Find GamePath -->
    <Choose>
        <When Condition="($(OS) == 'Unix' OR $(OS) == 'OSX') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/.steam/steam/steamapps/common/Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">$(HOME)/Library/Application Support/Steam/steamapps/common/Valheim/Contents/MacOS</GamePath>
            </PropertyGroup>
        </When>
        <When Condition="($(OS) == 'Windows_NT') AND $(GamePath) == ''">
            <PropertyGroup>
                <GamePath Condition="!Exists('$(GamePath)')">$([MSBuild]::GetRegistryValueFromView('HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Steam App 892970', 'InstallLocation', null, RegistryView.Registry64, RegistryView.Registry32))</GamePath>
                <_SteamLibraryPath>$([MSBuild]::GetRegistryValueFromView('HKEY_CURRENT_USER\SOFTWARE\Valve\Steam', 'SteamPath', null, RegistryView.Registry32))</_SteamLibraryPath>
                <GamePath Condition="!Exists('$(GamePath)') AND '$(_SteamLibraryPath)' != ''">$(_SteamLibraryPath)\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files\Steam\steamapps\common\Valheim</GamePath>
                <GamePath Condition="!Exists('$(GamePath)')">C:\Program Files (x86)\Steam\steamapps\common\Valheim</GamePath>
            </PropertyGroup>
        </When>
    </Choose>


    <!-- Manual overrides -->
    <Choose>
        <When Condition="$(BepInExPath) == ''">
            <PropertyGroup>
                <!--                $(GamePath)\BepInEx\core-->
                <BepInExPath>$(SolutionDir)/libs</BepInExPath>
            </PropertyGroup>
        </When>
        <When Condition="$(ManagedDataPath) == ''">
            <PropertyGroup>
                <!--                $(GamePath)\valheim_Data\Managed-->
                <ManagedDataPath>$(SolutionDir)/libs</ManagedDataPath>
            </PropertyGroup>
        </When>
    </Choose>

    <!-- Set start action -->
    <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
        <StartAction>Program</StartAction>
        <StartProgram>$(GamePath)\valheim.exe</StartProgram>
        <StartArguments>-console --doorstop-enable true --doorstop-target $(HOMEPATH)\AppData\Roaming\r2modmanPlus-local\Valheim\profiles\valheim_mod_debugging\BepInEx\core\BepInEx.Preloader.dll</StartArguments>
        <StartWorkingDirectory>$(GamePath)</StartWorkingDirectory>
    </PropertyGroup>

    <PropertyGroup Condition="'$(OS)' == 'Windows_NT'">
        <StartAction>Program</StartAction>
        <StartProgram>C:\Program Files (x86)\Steam\steamapps\common\Valheim dedicated server\start_headless_server.bat</StartProgram>
        <!--        <StartArguments>-console &#45;&#45;doorstop-enable true &#45;&#45;doorstop-target $(HOMEPATH)\AppData\Roaming\r2modmanPlus-local\Valheim\profiles\valheim_mod_debugging\BepInEx\core\BepInEx.Preloader.dll</StartArguments>-->
        <StartWorkingDirectory>C:\Program Files (x86)\Steam\steamapps\common\Valheim dedicated server</StartWorkingDirectory>
    </PropertyGroup>

    <!-- Add BepInEx references -->
    <ItemGroup Label="BepInEx">
        <Reference Include="0Harmony">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(BepInExPath)\0Harmony.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="BepInEx">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(BepInExPath)\BepInEx.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>

    <!-- Add valheim_data references -->
    <ItemGroup Label="Valheim_Data">
        <Publicize Include="assembly_valheim"/>
        <Reference Include="assembly_valheim">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_valheim.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_googleanalytics">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_googleanalytics.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_guiutils">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_guiutils.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="ui_lib">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\ui_lib.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_postprocessing">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_postprocessing.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_steamworks">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_steamworks.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_sunshafts">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_sunshafts.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="assembly_utils">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\assembly_utils.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>

    <ItemGroup Label="Csharp-Libs">
        <Reference Include="System"/>
        <Reference Include="System.Core"/>
    </ItemGroup>
    <!-- Add Unity references -->
    <ItemGroup Label="Unity">
        <Reference Include="UnityEngine">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.AccessibilityModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.AccessibilityModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.AIModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.AIModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.AnimationModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.AnimationModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.AudioModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.AudioModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.ClothModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.ClothModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.CoreModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.CoreModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.InputLegacyModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.InputLegacyModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.ParticleSystemModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.ParticleSystemModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.PhysicsModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.PhysicsModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.ScreenCaptureModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.ScreenCaptureModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="Unity.TextMeshPro">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\Unity.TextMeshPro.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UI">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UI.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UIModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UIModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UIElementsModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UIElementsModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.InputModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.InputModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.JSONSerializeModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.JSONSerializeModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.IMGUIModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.ImageConversionModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.ImageConversionModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.TerrainModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.TerrainModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.TextCoreModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.TextCoreModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.TextRenderingModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.TextRenderingModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UnityWebRequestAudioModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UnityWebRequestAudioModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UnityWebRequestModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UnityWebRequestModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UnityWebRequestWWWModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UnityWebRequestWWWModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.UnityWebRequestTextureModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.UnityWebRequestTextureModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.AssetBundleModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.AssetBundleModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
        <Reference Include="UnityEngine.IMGUIModule">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>$(ManagedDataPath)\UnityEngine.IMGUIModule.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>

    <ItemGroup Label="required-mods">
        <Reference Include="Jotunn">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>..\..\libs\Jotunn.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>

    <PropertyGroup>
        <ValheimServerPath>C:\Program Files (x86)\Steam\steamapps\common\Valheim dedicated server</ValheimServerPath>
        <R2ModManPath>%HOMEPATH%\AppData\Roaming\r2modmanPlus-local</R2ModManPath>
        <R2ModManProfile>Valheim\profiles\valheim_mod_debugging</R2ModManProfile>
        <PluginDeployTarget>BepInEx\plugins\zolantris-ValheimRAFT</PluginDeployTarget>
        <PluginDeployPath>$(R2ModManPath)\$(R2ModManProfile)\$(PluginDeployTarget)</PluginDeployPath>
    </PropertyGroup>
    <!-- Patches for community mods -->
    <!-- Todo this may be moved direcly into repos that require this mod -->
    <ItemGroup Label="Community Mod Patches">
        <Publicize Include="PlanBuild"/>
        <Reference Include="PlanBuild">
            <SpecificVersion>False</SpecificVersion>
            <HintPath>..\..\libs\PlanBuild.dll</HintPath>
            <Private>False</Private>
        </Reference>
    </ItemGroup>
    <Target Name="Copy_To_R2ModMan" Condition=" '$(Configuration)|$(Platform)' == 'Debug ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim|AnyCPU' " AfterTargets="PostBuildEvent">
        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).dll&quot; &quot;$(PluginDeployPath)\$(AssemblyName).dll&quot;"/>
        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).pdb&quot; &quot;$(PluginDeployPath)\$(AssemblyName).pdb&quot;"/>
    </Target>
    <Target KeepDuplicateOutputs="false" Name="Copy_To_Valheim_Server" Condition=" '$(Configuration)|$(Platform)' == 'Debug ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim Server|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim Server|AnyCPU' " AfterTargets="PostBuildEvent">
        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).dll&quot; &quot;$(ValheimServerPath)\$(PluginDeployTarget)\$(AssemblyName).dll&quot;"/>
        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).pdb&quot; &quot;$(ValheimServerPath)\$(PluginDeployTarget)\$(AssemblyName).pdb&quot;"/>
    </Target>
    <Target Name="Run_Valheim_Server" Condition=" '$(Configuration)|$(Platform)' == 'Debug ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim Server|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim Server|AnyCPU' " AfterTargets="Copy_To_Valheim_Server">
        <!--        <Exec Command="cd &quot;$(ValheimServerPath)&quot;-->
        <!--        powershell Start-Process -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>-->
        <!--    Windows Terminal    -->
        <!--        <Exec Command="powershell Stop-Task -Name ValheimServer"/>-->
        <Exec Command="wt.exe -w 1 --focus -d &quot;$(ValheimServerPath)&quot; --title ValheimServer powershell Start-Process -NoNewWindow -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>
    </Target>
    <Target Name="Run_Valheim" Condition="'$(Configuration)|$(Platform)' == 'Debug ClientServer|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Release Run Valheim|AnyCPU' Or '$(Configuration)|$(Platform)' == 'Debug Run Valheim|AnyCPU' " AfterTargets="Copy_To_R2ModMan">
        <!--        <Exec Command="powershell Stop-Task -Name ValheimClient"/>-->
        <!--    -console -char ZOL -server 50.39.165.163:2456 -password 12345    -->
        <Exec Command="wt.exe -w 2 --title ValheimClient &quot;C:\Program Files (x86)\Steam\steamapps\common\Valheim\valheim.exe&quot; --doorstop-enable true --doorstop-target &quot;%HOMEPATH%\AppData\Roaming\r2modmanPlus-local\Valheim\profiles\valheim_mod_debugging\BepInEx\core\BepInEx.Preloader.dll&quot;"/>
        <!--                <Exec Command="wt.exe -w 1 sp -d &quot;$(ValheimServerPath)&quot; &#45;&#45;title Valheim_Client powershell Start-Process -NoNewWindow -FilePath '$(ValheimServerPath)\start_headless_server.bat'"/>-->
    </Target>
    <Target Name="Generate_Mod_Archive" Condition="'$(Configuration)|$(Platform)' == 'Release Archive|AnyCPU'" AfterTargets="PostBuildEvent">
        <PropertyGroup>
            <RepoDir>$(OutDir)..\..\</RepoDir>
            <AssetsDir>$(RepoDir)Assets\</AssetsDir>
            <ModOutputDir>$(OutDir)ModVersions\</ModOutputDir>
            <TmpDir>$(OutDir)tmp\</TmpDir>
            <ThunderStoreDir>$(RepoDir)ThunderStore\</ThunderStoreDir>
            <ThunderStoreName>Thunderstore</ThunderStoreName>
            <NexusName>Nexus</NexusName>
            <ModNameVersion>$(AssemblyName)-$(ApplicationVersion).zip</ModNameVersion>
        </PropertyGroup>
        <Exec Command="if exist &quot;$(TmpDir)plugins\Assets&quot; rd /s /q &quot;$(TmpDir)plugins\Assets&quot;"/>
        <Exec Command="if exist &quot;$(TmpDir)&quot; rd /s /q &quot;$(TmpDir)&quot;"/>

        <Exec Command="if not exist &quot;$(ModOutputDir)&quot; mkdir &quot;$(ModOutputDir)&quot;"/>
        <Exec Command="if not exist &quot;$(TmpDir)&quot; mkdir &quot;$(TmpDir)&quot;"/>
        <Exec Command="if not exist &quot;$(TmpDir)plugins&quot; mkdir &quot;$(TmpDir)plugins&quot;"/>

        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).dll&quot; &quot;$(TmpDir)plugins\$(AssemblyName).dll&quot;"/>
        <Exec Command="copy &quot;$(OutDir)$(AssemblyName).pdb&quot; &quot;$(TmpDir)plugins\$(AssemblyName).pdb&quot;"/>
        <Exec Command="copy &quot;$(RepoDir)README.md&quot; &quot;$(TmpDir)README.md&quot;"/>

        <!-- Copy Assets -->
        <Exec Command="xcopy /d &quot;$(AssetsDir)&quot; &quot;$(TmpDir)plugins\Assets\&quot; /E/H"/>
        <Exec Command="del &quot;$(TmpDir)plugins\Assets\*.png.meta&quot;"/>


        <!--  Thunderstore and Nexus store may need different deploys  -->

        <Exec Command="xcopy /d &quot;$(ThunderStoreDir)&quot; &quot;$(TmpDir)&quot; /E/H"/>

        <!-- delete duplicate mod version-->
        <Exec Command="if exist &quot;$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)&quot; del /s /q &quot;$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)&quot;"/>
        <Exec Command="if exist &quot;$(ModOutputDir)$(NexusName)-$(ModNameVersion)&quot; del /s /q &quot;$(ModOutputDir)$(NexusName)-$(ModNameVersion)&quot;"/>
        <Exec Command="if exist &quot;$(ModOutputDir)libs-$(ApplicationVersion).zip&quot; del /s /q &quot;$(ModOutputDir)libs-$(ApplicationVersion).zip&quot;"/>


        <Exec Command="powershell Compress-Archive '$(TmpDir)\*' '$(ModOutputDir)$(ThunderStoreName)-$(ModNameVersion)'"/>
        <Exec Command="powershell Compress-Archive '$(TmpDir)\plugins\*' '$(ModOutputDir)$(NexusName)-$(ModNameVersion)'"/>
        <Exec Command="powershell Compress-Archive '$(RepoDir)libs\*' '$(ModOutputDir)libs-$(ApplicationVersion).zip'"/>
    </Target>
    <!-- Copy to plugins folder and zip -->
    <!-- <Target Name="PostBuild" AfterTargets="PostBuildEvent">
        <ItemGroup>
            <AllFiles Include="$(TargetDir)**\*.*" Exclude="$(TargetDir)**\*.pdb"/>
        </ItemGroup>
        <Copy SourceFiles="@(AllFiles)" DestinationFolder="$(GamePath)\BepInEx\plugins\%(RecursiveDir)"/>
        <Delete Files="$(ProjectDir)\bin\$(TargetName).zip"/>
        <Copy SourceFiles="@(AllFiles)" DestinationFolder="$(TargetDir)..\Release\%(RecursiveDir)"/>
        <ZipDirectory SourceDirectory="$(TargetDir)..\Release" DestinationFile="$(ProjectDir)\bin\$(TargetName).zip"/>
        <RemoveDir Directories="$(TargetDir)..\Release"/>
    </Target> -->
    <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets"/>
</Project>